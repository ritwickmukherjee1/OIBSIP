import numpy as np 
import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
import seaborn as sns

df = pd.read_csv("retail sales dataset.csv")
print(df)
     Transaction ID        Date Customer ID  Gender  Age Product Category  \
0                 1  2023-11-24     CUST001    Male   34           Beauty   
1                 2  2023-02-27     CUST002  Female   26         Clothing   
2                 3  2023-01-13     CUST003    Male   50      Electronics   
3                 4  2023-05-21     CUST004    Male   37         Clothing   
4                 5  2023-05-06     CUST005    Male   30           Beauty   
..              ...         ...         ...     ...  ...              ...   
995             996  2023-05-16     CUST996    Male   62         Clothing   
996             997  2023-11-17     CUST997    Male   52           Beauty   
997             998  2023-10-29     CUST998  Female   23           Beauty   
998             999  2023-12-05     CUST999  Female   36      Electronics   
999            1000  2023-04-12    CUST1000    Male   47      Electronics   

     Quantity  Price per Unit  Total Amount  
0           3              50           150  
1           2             500          1000  
2           1              30            30  
3           1             500           500  
4           2              50           100  
..        ...             ...           ...  
995         1              50            50  
996         3              30            90  
997         4              25           100  
998         3              50           150  
999         4              30           120  

[1000 rows x 9 columns]

df.head()
Transaction ID	Date	Customer ID	Gender	Age	Product Category	Quantity	Price per Unit	Total Amount
0	1	2023-11-24	CUST001	Male	34	Beauty	3	50	150
1	2	2023-02-27	CUST002	Female	26	Clothing	2	500	1000
2	3	2023-01-13	CUST003	Male	50	Electronics	1	30	30
3	4	2023-05-21	CUST004	Male	37	Clothing	1	500	500
4	5	2023-05-06	CUST005	Male	30	Beauty	2	50	100

df.describe()
Transaction ID	Age	Quantity	Price per Unit	Total Amount
count	1000.000000	1000.00000	1000.000000	1000.000000	1000.000000
mean	500.500000	41.39200	2.514000	179.890000	456.000000
std	288.819436	13.68143	1.132734	189.681356	559.997632
min	1.000000	18.00000	1.000000	25.000000	25.000000
25%	250.750000	29.00000	1.000000	30.000000	60.000000
50%	500.500000	42.00000	3.000000	50.000000	135.000000
75%	750.250000	53.00000	4.000000	300.000000	900.000000
max	1000.000000	64.00000	4.000000	500.000000	2000.000000

df.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1000 entries, 0 to 999
Data columns (total 9 columns):
 #   Column            Non-Null Count  Dtype         
---  ------            --------------  -----         
 0   Transaction ID    1000 non-null   int64         
 1   Date              1000 non-null   datetime64[ns]
 2   Customer ID       1000 non-null   object        
 3   Gender            1000 non-null   object        
 4   Age               1000 non-null   int64         
 5   Product Category  1000 non-null   object        
 6   Quantity          1000 non-null   int64         
 7   Price per Unit    1000 non-null   int64         
 8   Total Amount      1000 non-null   int64         
dtypes: datetime64[ns](1), int64(5), object(3)
memory usage: 70.4+ KB

df.isnull().sum()
Transaction ID      0
Date                0
Customer ID         0
Gender              0
Age                 0
Product Category    0
Quantity            0
Price per Unit      0
Total Amount        0
dtype: int64

(df.isnull().sum()/(len(df)))*100
Transaction ID      0.0
Date                0.0
Customer ID         0.0
Gender              0.0
Age                 0.0
Product Category    0.0
Quantity            0.0
Price per Unit      0.0
Total Amount        0.0
dtype: float64

df.describe().T
count	mean	std	min	25%	50%	75%	max
Transaction ID	1000.0	500.500	288.819436	1.0	250.75	500.5	750.25	1000.0
Age	1000.0	41.392	13.681430	18.0	29.00	42.0	53.00	64.0
Quantity	1000.0	2.514	1.132734	1.0	1.00	3.0	4.00	4.0
Price per Unit	1000.0	179.890	189.681356	25.0	30.00	50.0	300.00	500.0
Total Amount	1000.0	456.000	559.997632	25.0	60.00	135.0	900.00	2000.0

df.describe(include='all').T
count	unique	top	freq	mean	std	min	25%	50%	75%	max
Transaction ID	1000.0	NaN	NaN	NaN	500.5	288.819436	1.0	250.75	500.5	750.25	1000.0
Date	1000	345	2023-05-16	11	NaN	NaN	NaN	NaN	NaN	NaN	NaN
Customer ID	1000	1000	CUST001	1	NaN	NaN	NaN	NaN	NaN	NaN	NaN
Gender	1000	2	Female	510	NaN	NaN	NaN	NaN	NaN	NaN	NaN
Age	1000.0	NaN	NaN	NaN	41.392	13.68143	18.0	29.0	42.0	53.0	64.0
Product Category	1000	3	Clothing	351	NaN	NaN	NaN	NaN	NaN	NaN	NaN
Quantity	1000.0	NaN	NaN	NaN	2.514	1.132734	1.0	1.0	3.0	4.0	4.0
Price per Unit	1000.0	NaN	NaN	NaN	179.89	189.681356	25.0	30.0	50.0	300.0	500.0
Total Amount	1000.0	NaN	NaN	NaN	456.0	559.997632	25.0	60.0	135.0	900.0	2000.0

cat_cols=df.select_dtypes(include=['object']).columns
num_cols = df.select_dtypes(include=np.number).columns.tolist()
print("Categorical Variables:")
print(cat_cols)
print("Numerical Variables:")
print(num_cols)
Categorical Variables:
Index(['Date', 'Customer ID', 'Gender', 'Product Category'], dtype='object')
Numerical Variables:
['Transaction ID', 'Age', 'Quantity', 'Price per Unit', 'Total Amount']
â€‹
Visulization

plt.figure(figsize=(8, 6))
plt.hist(df['Age'], bins=20, color='blue', edgecolor='black')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.title('Distribution of Customer Age')
plt.show()

plt.figure(figsize=(10, 6))
df['Date'] = pd.to_datetime(df['Date'])
monthly_sales = df.groupby(df['Date'].dt.to_period('M'))['Total Amount'].sum()
monthly_sales.plot(kind='line', marker='o')
plt.xlabel('Date')
plt.ylabel('Total Sales Amount')
plt.title('Monthly Sales Trend')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(8, 6))
product_counts = df['Product Category'].value_counts()
product_counts.plot(kind='bar', color='purple',edgecolor='black')
plt.xlabel('Product Category')
plt.ylabel('Number of Transactions')
plt.title('Distribution of Product Categories')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(8, 6))
plt.scatter(df['Age'], df['Total Amount'], alpha=0.5)
plt.xlabel('Age')
plt.ylabel('Total Amount')
plt.title('Correlation between Age and Total Spending')
plt.show()

plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', center=0)
plt.title('Correlation Heatmap')
plt.show()






